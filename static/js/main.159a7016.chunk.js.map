{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","length","map","imdbId","FindMovie","setMovies","useState","setTitle","setMovie","isLoading","setIsloading","isError","setIsError","getMovieData","movieTitle","query","fetch","then","res","json","catch","Response","Error","newMovieData","Title","Plot","Poster","imdbID","finally","onSubmit","e","preventDefault","htmlFor","type","id","placeholder","onChange","target","value","cn","disabled","onClick","newMovie","newMovieId","m","includes","addMovieToList","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.159a7016.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img data-cy=\"moviePoster\" src={movie.imgUrl} alt=\"Film logo\" />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img src=\"images/imdb-logo.jpeg\" alt=\"imdb\" />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">\n            {movie.title}\n          </p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {!!movies.length && (movies.map((movie) => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    )))}\n  </div>\n);\n","import React, {\n  useState,\n} from 'react';\nimport './FindMovie.scss';\nimport cn from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[],\n  setMovies: (movies: Movie[]) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const [title, setTitle] = useState<string>('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsloading] = useState<boolean>(false);\n  const [isError, setIsError] = useState<boolean>(false);\n\n  const getMovieData = (movieTitle: string) => {\n    setIsloading(true);\n    setIsError(false);\n    getMovie(movieTitle)\n      .then((newMovieData: MovieData | ResponseError) => {\n        if ('imdbID' in newMovieData) {\n          setMovie({\n            title: newMovieData.Title,\n            description: newMovieData.Plot,\n            imgUrl: newMovieData.Poster\n              ? newMovieData.Poster\n              : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n            imdbUrl: `https://www.imdb.com/title/${newMovieData.imdbID}`,\n            imdbId: newMovieData.imdbID,\n          });\n        } else {\n          setIsError(true);\n        }\n      })\n      .finally(() => setIsloading(false));\n  };\n\n  const handleFindMovie = (\n    e: React.FormEvent<HTMLFormElement>,\n  ) => {\n    e.preventDefault();\n    if (isError) {\n      setIsError(false);\n    }\n\n    getMovieData(title);\n  };\n\n  const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (isError) {\n      setIsError(false);\n    }\n\n    setTitle(e.target.value);\n  };\n\n  const addMovieToList = (newMovie: Movie) => {\n    const newMovieId = newMovie.imdbId;\n    const moviesIds = movies.map(m => m.imdbId);\n\n    if (!moviesIds.includes(newMovieId)) {\n      setMovies([...movies, newMovie]);\n    }\n\n    setMovie(null);\n  };\n\n  const handleAddMovie = () => {\n    if (movie) {\n      addMovieToList(movie);\n    }\n\n    setTitle('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleFindMovie}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              onChange={handleTitleChange}\n              value={title}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light',\n                { 'is-loading': isLoading })}\n              disabled={!title}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        {movie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=1944abaf';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie movies={movies} setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}